{"version":3,"sources":["../../src/pages/payment/payment.module.ts","../../src/pages/payment/payment.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AAUxC;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAR7B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACtC;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACZ9B,iDAAiD;AACP;AAC0B;AACX;AASzD;IAQE,qBACS,OAAsB,EACtB,SAAoB,EACpB,WAAwB;QAFxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;QAPjC,aAAQ,GAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,4DAA4D;QAS/G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,+CAA+C;QAE5F,4BAA4B;QAE3B,uCAAuC;QACvC,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,gBAAgB,EAAG,CAAC,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC1C,8CAA8C;YAC/C,OAAO,EAAG,CAAC,oBAAoB,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACtD,CAAC;IACN,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,6CAA6C;QAC3F,2BAA2B;QAC3B,mNAAmN;QACnN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;IACvE,CAAC;IA9BU,WAAW;QAJvB,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;6EAU+B;YACX,mEAAS;YACP,QAAW;OAXtB,WAAW,CAgCvB;IAAD,CAAC;AAAA;SAhCY,WAAW,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PaymentPage } from './payment';\n\n@NgModule({\n  declarations: [\n    PaymentPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PaymentPage),\n  ],\n})\nexport class PaymentPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/payment/payment.module.ts","// Controlador da pagina de escolha de pagamentos\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { PedidoDTO } from '../../models/pedido.dto';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-payment',\n  templateUrl: 'payment.html',\n})\nexport class PaymentPage {\n\n  pedido : PedidoDTO; // Vai ser recebido pela pagina que vc escolhe o endereço, o endereço e armazenado no pedido que foi instanciado e passado para essa pagina de pagamento esse pedido. Esse pedido vem da pagina de endereço\n\n  parcelas : number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; // Ao selecionar o numero de parcelas, sera armazenado aqui \n\n  formGroup : FormGroup; // É utilizado um formulario para controlar os dados da tela que o usuario vai entrar\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public formBuilder: FormBuilder) {\n\n      this.pedido = this.navParams.get('pedido'); // Pega o objeto pedido que vem de outra pagina\n\n     // console.log(this.pedido);\n\n      // foi feito tambem na pagina de signup\n      this.formGroup =  this.formBuilder.group({\n        numeroDeParcelas : [1, Validators.required],\n         // pagamentoComCartao -> igual esta no backend\n        \"@type\" : [\"pagamentoComCartao\", Validators.required]\n      })\n  }\n\n  nextPage(){\n    this.pedido.pagamento = this.formGroup.value; // Pegando a forma de pagamento do formulario\n    //console.log(this.pedido);\n    // setRoot()-> É utilizado pq essa mesma pagina sera utilizada para mostrar(SEU PEDIDO FOI REGISTRADO, CODIDO TAL) então se tiver a seta para voltar vai ficar inconsistente pq o pedido ja vai ter sido registrado\n    this.navCtrl.setRoot('OrderConfirmationPage', {pedido: this.pedido});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/payment/payment.ts"],"sourceRoot":""}