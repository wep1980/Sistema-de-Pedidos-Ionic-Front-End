{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/config/api.config.ts","../../src/services/domain/categoria.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/app/interceptors/error-interceptor.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 2","var map = {\n\t\"../pages/categorias/categorias.module\": [\n\t\t275,\n\t\t1\n\t],\n\t\"../pages/home/home.module\": [\n\t\t276,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 2","// ARQUIVO DE CONFIGURAÇÕES DA API COMO OBJETOS JSON\r\n\r\nexport const API_CONFIG = {\r\n    baseUrl: \"http://localhost:8080\", // URL base do SpringBoot\r\n    bucketBaseUrl: \"https://spring-ionic-mc.s3-sa-east-1.amazonaws.com\" // URL Amazon imagens\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/api.config.ts","import { Inject, Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { API_CONFIG } from \"../../config/api.config\";\r\nimport { Observable } from \"rxjs/Rx\"; // IMPORTAÇÃO CORRETA DO Observable\r\nimport { CategoriaDTO } from \"../../models/categoria.dto\";\r\n\r\n@Injectable() // A Classe pode ser injetada em outras classes\r\nexport class CategoriaService {\r\n\r\n    constructor(public http: HttpClient) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Método que busca todas as categorias\r\n     * A crase `` permite colocar variaveis no string sem precisar ficar concatenando o operador +\r\n     * ${} -> Permite colocar variaveis\r\n     * Retorna o tipo de dados -> CategoriaDTO[] Lista de CategoriaDTO\r\n     * get<CategoriaDTO[]> -> get tipado = Lista de CategoriaDTO\r\n     * \r\n     * OBS : A Requisição HTTP é assincrona( CHAMADA AJAX ) e necessario se inscrever para receber essa requisição\r\n     * O Angular encapsula essa requisição assincrona por meio de um objeto chamado Observable.\r\n     * O retorno do método então e do tipo Observable< CategoriaDTO[] > \r\n     */\r\n    findAll() : Observable <CategoriaDTO[]> {\r\n\r\n        return this.http.get<CategoriaDTO[]> (`${API_CONFIG.baseUrl}/categorias`);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/categoria.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","/**\n * TODAS AS CLASSES QUE SÃO UTILIZADAS NO CORPO DO SCRIPT PRECISAM ESTAR IMPORTADAS AQUI EMBAIXO\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'; // Import do HTTPCLIENT\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { CategoriaService } from '../services/domain/categoria.service';\nimport { ErrorInterceptorProvider } from './interceptors/error-interceptor';\n\n/**\n * Decorator -> é uma anotação que contém configurações para alterar a classe\n */\n@NgModule({\n  declarations: [ // Aqui ficam a lista de componentes ou paginas que fazem parte deste modulo\n    MyApp\n  ],\n  imports: [ // Lista de modulos que são importados por este modulo\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n  ],\n  bootstrap: [IonicApp], // Bootstrap -> tem a indicação de como a aplicação vai iniciar\n  entryComponents: [  // Quando o declaration for uma pagina e não um componente, essa pagina precisa ser declarada aqui também\n    MyApp\n  ],\n  providers: [ // Aqui se declara as classes que os objetos injetaveis sejam uma instancia unica para este modulo\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    \n    /** CategoriaService -> Registro do serviço no escopo global da aplicação, \n     * pois e um serviço que vai ser muito utilizado.\n     * Unica instancia servindo toda aplicação\n     */\n    CategoriaService,\n    ErrorInterceptorProvider\n  ]\n})\n/**\n * Export -> permite que uma classe ou elemento import o AppModule( torna-se visivel em outros lugares )\n */\nexport class AppModule {} \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n\n\n/**\n * Pagina controladora da pagina app.html ( TODAS AS PAGINAS HTML TEM UM CONTROLADOR )\n */\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: String = 'HomePage'; // Configuração da página inicial do aplicativo\n\n  pages: Array<{title: string, component: String }>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: 'HomePage' }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// Classe de tratamento de erros global. Existe a possibilidade de tratamento pelo Controller\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx'; // IMPORTANTE: IMPORT ATUALIZADO\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n \r\n\r\n    /**\r\n     * Método que intercepta as requisições\r\n     */\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(\"Passou no interceptor\");\r\n        return next.handle(req)\r\n        .catch((error, caught) => {\r\n\r\n        let errorObj = error;\r\n        if(errorObj.error){\r\n            errorObj = errorObj.error;\r\n        }\r\n        /** Se a resposta não vier no formato JSON, ou seja, não tiver o campo status, vira no formato text, \r\n         * então sera feita a conversão para JSON */\r\n        if(!errorObj.status){ \r\n            errorObj = JSON.parse(errorObj);\r\n        }\r\n\r\n        console.log(\"Erro detectado pelo interceptor:\"); // A responsabilidade de imprimir na tela e aqui do interceptor\r\n        console.log(errorObj);\r\n\r\n            return Observable.throw(error);\r\n        }) as any;\r\n    }\r\n}\r\n\r\n  \r\n\r\n// Declaração do provider do interceptor\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true,\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/interceptors/error-interceptor.ts"],"sourceRoot":""}