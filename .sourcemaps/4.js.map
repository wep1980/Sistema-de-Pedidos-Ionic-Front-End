{"version":3,"sources":["../../src/pages/pick-address/pick-address.module.ts","../../src/pages/pick-address/pick-address.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AAUjD;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QARjC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,sEAAe;aAChB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC;aAC1C;SACF,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZlC,6EAA6E;AACnC;AACe;AAGQ;AACM;AACP;AAQhE;IAKE,yBACS,OAAsB,EACtB,SAAoB,EACpB,OAAuB,EACvB,cAA8B,EAC9B,WAAwB;QAJxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,YAAO,GAAP,OAAO,CAAgB;QACvB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;IACjC,CAAC;IAED,wCAAc,GAAd;QAAA,iBAoDC;QAnDC,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,gDAAgD;QAC7F,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,wBAAwB;iBACtE,SAAS,CAAC,kBAAQ;gBACjB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,wIAAwI;gBAE5K,IAAI,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,iCAAiC;gBAE1D;;;;;;;;;;;;;;;;;;;;QAoBR;gBACN,KAAI,CAAC,MAAM,GAAG;oBACZ,OAAO,EAAE,EAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAC;oBAC7B,iBAAiB,EAAE,IAAI;oBACvB,SAAS,EAAE,IAAI;oBAEf;;;;uBAIG;oBACH,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAC,IAAK,MAAM,CAAC,EAAC,UAAU,EAAE,CAAC,CAAC,UAAU,EAAG,OAAO,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,EAAC,EAAC,GAAC,CAAC,CAAC,UAAU;iBACzG;YACH,CAAC,EACD,eAAK;gBACH,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC,CAAC;QACX,CAAC;QACD,IAAI,EAAC;YACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAGD;;;OAGG;IACH,kCAAQ,GAAR,UAAS,IAAiB;QACvB,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAC,CAAC;QAC9C,2BAA2B;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,EAAC,MAAM,EAAG,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;IAC5D,CAAC;IA5EU,eAAe;QAJ3B,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;6EAO+B;YACX,iFAAS;YACX,wFAAc;YACP,oFAAc;YACjB,WAAW;OAVtB,eAAe,CA6E3B;IAAD,CAAC;AAAA;SA7EY,eAAe,gB","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PickAddressPage } from './pick-address';\n\n@NgModule({\n  declarations: [\n    PickAddressPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PickAddressPage),\n  ],\n})\nexport class PickAddressPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pick-address/pick-address.module.ts","// Controlador da pagina de endereços do cliente, armazena os dados do pedido\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { EnderecoDTO } from '../../models/endereco.dto';\nimport { PedidoDTO } from '../../models/pedido.dto';\nimport { CartService } from '../../services/domain/cart.service';\nimport { ClienteService } from '../../services/domain/cliente.service';\nimport { StorageService } from '../../services/storage.service';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-pick-address',\n  templateUrl: 'pick-address.html',\n})\nexport class PickAddressPage {\n\n  items: EnderecoDTO[];\n  pedido : PedidoDTO;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public storage: StorageService,\n    public clienteService: ClienteService,\n    public cartService: CartService) {\n  }\n\n  ionViewDidLoad() {\n    let localUser = this.storage.getLocalUser(); // pega o usario que esta logado no localStorage\n    if (localUser && localUser.email) { // Verifica se o objeto esta Ok\n      this.clienteService.findByEmail(localUser.email) // Faz a busca por email\n        .subscribe(response => { // se Inscreve para resposta\n          this.items = response['enderecos']; // E pega os endereços do cliente. Esta entre ['enderecos'] pq assim fica livre de erro do compilador e essa resposta que vem do backend\n          \n          let cart = this.cartService.getCart(); // Variavel que recebe o carrinho\n\n                        /**\n                         * Estrutura que precisa ser montada para armazenar os dados de um pedido\n               * {\n              \"cliente\" : {\"id\" : 1},           // PARTE 1\n              \"enderecoDeEntrega\" : {\"id\" : 1},\n              \"pagamento\" : {\n              \"numeroDeParcelas\" : 10,      \n              \"@type\": \"pagamentoComCartao\" \n              },\n              \"itens\" : [\n              {\n              \"quantidade\" : 2,       // PARTE 4\n              \"produto\" : {\"id\" : 3}  // PARTE 4\n              },\n              {\n              \"quantidade\" : 1,       // PARTE 4\n              \"produto\" : {\"id\" : 1}  // PARTE 4\n              }\n              ]\n              }\n              */\n          this.pedido = {\n            cliente: {id: response['id']}, // PARTE 1 - Pegando o id do cliente\n            enderecoDeEntrega: null, // Por enquanto ainda não se sabe qual é, o usuario ainda vai escolher\n            pagamento: null, // Por enquanto ainda não se sabe qual é, o usuario ainda vai escolher\n\n            /**\n             * Os itens do pedido são os itens do carrinho que precisam ser transformados em outro formato.\n             * Percorre a lista de itens do carrinho convertendo cada objeto para o novo objeto do tipo item pedido - PARTE 4\n             * \n             */\n            itens: cart.items.map(x => {return {quantidade: x.quantidade , produto: {id: x.produto.id}}}) // PARTE 4\n          }\n        },\n        error => {\n          if (error.status == 403) {\n            this.navCtrl.setRoot('HomePage');\n          }\n        });\n}\nelse{\n    this.navCtrl.setRoot('HomePage');\n    }\n  }\n\n\n  /**\n   * Metodo que redireciona a pagina depois de ter selecionado o endereço passando como parametro o objeto pedido\n   * @param item \n   */\n  nextPage(item: EnderecoDTO){\n     this.pedido.enderecoDeEntrega = {id: item.id};\n     //console.log(this.pedido);\n     this.navCtrl.push('PaymentPage', {pedido : this.pedido});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pick-address/pick-address.ts"],"sourceRoot":""}