{"version":3,"sources":["../../src/services/domain/cart.service.ts","../../src/services/image-util.service.ts","../../src/services/domain/cliente.service.ts","../../src/services/domain/produto.service.ts","../../src/services/domain/categoria.service.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/app/app.component.ngfactory.js.pre-build-optimizer.js","../../src/app/app.component.ts","../../src/app/interceptors/error-interceptor.ts","../../src/app/interceptors/auth-interceptor.ts","../../src/app/app.module.ts","../../src/app/app.module.ngfactory.js.pre-build-optimizer.js","../../src/config/storage_keys.config.ts","../../src/services/storage.service.ts","../../src/config/api.config.ts","../../src/services/auth.service.ts"],"names":["CartService","storage","this","prototype","createOrClearCart","cart","items","setCart","getCart","addProduto","produto","findIndex","x","id","push","quantidade","removeProduto","position","splice","increaseQuantity","decreaseQuantity","total","soma","i","length","preco","ImageUtilService","dataUriToBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","type","ClienteService","http","imageUtilService","findByEmail","email","get","__WEBPACK_IMPORTED_MODULE_3__config_api_config__","baseUrl","findById","getImageFromBucket","bucketBaseUrl","responseType","insert","obj","post","observe","uploadPicture","picture","pictureBlob","formData","FormData","set","ProdutoService","produto_id","findByCategoria","categoria_id","page","linesPerPage","getSmallImageFromBucket","CategoriaService","findAll","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module","exports","webpackAsyncContext","ids","map","__webpack_require__","e","reject","../pages/cart/cart.module.ngfactory","../pages/categorias/categorias.module.ngfactory","../pages/home/home.module.ngfactory","../pages/order-confirmation/order-confirmation.module.ngfactory","../pages/payment/payment.module.ngfactory","../pages/pick-address/pick-address.module.ngfactory","../pages/produto-detail/produto-detail.module.ngfactory","../pages/produtos/produtos.module.ngfactory","../pages/profile/profile.module.ngfactory","../pages/signup/signup.module.ngfactory","Object","View_MyApp_1","_l","core","_v","en","$event","ad","_co","component","close","openPage","context","$implicit","item_ngfactory","item","util_form","config","item_reorder","contentLabel","_buttons","_icons","item_content","menu_close","menu_controller","menuClose","_ck","title","View_MyApp_0","nav","menu_ngfactory","split_pane","menu","platform","keyboard","gesture_controller","dom_controller","app","content","menuContent","menuNav","toolbar_header","view_controller","toolbar_ngfactory","toolbar","toolbar_title_ngfactory","toolbar_title","navbar","content_ngfactory","nav_controller","list","common","ngForOf","nav_ngfactory","transition_controller","deep_linker","swipeBackEnabled","root","pages","rootPage","_sbPadding","statusbarPadding","_hasRefresher","MyApp","statusBar","splashScreen","auth","initializeApp","_this","ready","styleDefault","hide","logout","setRoot","error_interceptor_ErrorInterceptor","ErrorInterceptor","alertCtrl","intercept","next","handle","catch","error","caught","errorObj","status","JSON","parse","console","log","handle401","handle403","handle422","handleDefaultError","Rx","throw","setLocalUser","create","message","enableBackdropDismiss","buttons","text","present","listErrors","errors","messages","s","fieldName","auth_interceptor_AuthInterceptor","AuthInterceptor","localUser","getLocalUser","requestToAPI","url","substring","api_config","authReq","clone","headers","token","AppModule","RenderType_MyApp","encapsulation","styles","data","MyAppNgFactory","status_bar","splash_screen","auth_service","AppModuleNgFactory","app_root","action_sheet_component_ngfactory","alert_component_ngfactory","app_root_ngfactory","loading_component_ngfactory","modal_component_ngfactory","picker_component_ngfactory","popover_component_ngfactory","select_popover_component_ngfactory","toast_component_ngfactory","platform_browser","gesture_config","p0_0","p0_1","p1_0","p2_0","p2_1","storage_service","alert_controller","esm5_forms","action_sheet_controller","events","haptic","loading_controller","ionic_angular_module","url_serializer","module_loader","modal_controller","picker_controller","popover_controller","tap_click","toast_controller","categoria_service","cart_service","image_util_service","cliente_service","produto_service","ionic_error_handler","platform_registry","links","loadChildren","name","segment","priority","defaultHistory","ng_module_loader","p3_0","p3_1","p3_2","p3_3","p3_4","p4_0","p4_1","p4_2","p4_3","mode_registry","STORAGE_KEYS","storage_service_StorageService","StorageService","usr","localStorage","getItem","removeItem","setItem","stringify","str","d","__webpack_exports__","API_CONFIG","AuthService","cartService","jwtHelper","__WEBPACK_IMPORTED_MODULE_3_angular2_jwt__","authenticate","creds","__WEBPACK_IMPORTED_MODULE_4__config_api_config__","successfulLogin","authorizationValue","tok","user","decodeToken","sub","refreshToken"],"mappings":"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","sourcesContent":["// O carrinho e um domain so da aplicação, ele não existe no backend\r\nimport { Injectable } from '@angular/core';\r\nimport { StorageService } from '../storage.service';\r\nimport { Cart } from '../../models/cart';\r\nimport { ProdutoDTO } from '../../models/produto.dto';\r\n\r\n@Injectable()\r\nexport class CartService {\r\n\r\n    constructor(public storage: StorageService) {\r\n    }\r\n\r\n    /**\r\n     * Metodo que cria ou limpa o carrinho do storage\r\n     */\r\n    createOrClearCart() : Cart {\r\n        let cart: Cart = {items: []};\r\n        this.storage.setCart(cart);\r\n        return cart;\r\n    }\r\n\r\n    /**\r\n     * Metodo que verifica se o carrinho ja existe, senão existir e criado um novo\r\n     * Pega o carrinho que esta no localStorage\r\n     */\r\n    getCart() : Cart {\r\n        let cart: Cart = this.storage.getCart();\r\n        if (cart == null) {\r\n            cart = this.createOrClearCart();\r\n        }\r\n        return cart;\r\n    }\r\n\r\n\r\n    /**\r\n     * Método que adiciona um produto no storage e retorna o carrinho atualizado\r\n     * @param produto \r\n     */\r\n    addProduto(produto: ProdutoDTO) : Cart {\r\n        let cart = this.getCart(); // Pega o carrinho que esta no localStorage\r\n\r\n        // Verificando se o produto ja existe. findIndex() -> função que encontra a posição de um elemento(produtos que estão na lista do carrinho) e compara se o id do produto que veio como argumento exite, se o produto existir vai ser retornada a posição dele. \r\n        let position = cart.items.findIndex(x => x.produto.id == produto.id); \r\n\r\n        // Se nao existir vai ser retornada a posição menos 1 ( -1 )\r\n        if (position == -1) {\r\n            cart.items.push({quantidade: 1, produto: produto}); // Adiciona o elemnto na lista do carrinho\r\n        }\r\n        this.storage.setCart(cart); // Atualiza o carrinho\r\n        return cart;\r\n    }\r\n\r\n\r\n    /**\r\n     * metodo que remove o produto do carrinho\r\n     * @param produto \r\n     */\r\n    removeProduto(produto: ProdutoDTO) : Cart {\r\n        let cart = this.getCart();\r\n        let position = cart.items.findIndex(x => x.produto.id == produto.id);\r\n        if (position != -1) {\r\n            // splice(position, 1) -> remove. recebe a posição e o 1 indica uma remoção\r\n            cart.items.splice(position, 1);\r\n        }\r\n        this.storage.setCart(cart);\r\n        return cart;\r\n    }\r\n\r\n\r\n    /**\r\n     * Incrementa a quantidade de um produto no carrinho\r\n     * @param produto \r\n     */\r\n    increaseQuantity(produto: ProdutoDTO) : Cart {\r\n        let cart = this.getCart();\r\n        let position = cart.items.findIndex(x => x.produto.id == produto.id);\r\n        if (position != -1) {\r\n            cart.items[position].quantidade++;\r\n        }\r\n        this.storage.setCart(cart);\r\n        return cart;\r\n    }\r\n\r\n\r\n    /**\r\n     * Diminui a quantidade de um produto no carrinho\r\n     * @param produto \r\n     */\r\n    decreaseQuantity(produto: ProdutoDTO) : Cart {\r\n        let cart = this.getCart();\r\n        let position = cart.items.findIndex(x => x.produto.id == produto.id);\r\n        if (position != -1) {\r\n            cart.items[position].quantidade--;\r\n            if (cart.items[position].quantidade < 1) { // se a quantidade for menor que 1 o item e excluido do carrinho\r\n                cart = this.removeProduto(produto);\r\n            }\r\n        }\r\n        this.storage.setCart(cart);\r\n        return cart;\r\n    }\r\n\r\n\r\n    /**\r\n     * Mostra o valor total do carrinho\r\n     */\r\n    total() : number {\r\n        let cart = this.getCart();\r\n        let soma = 0;\r\n        for (var i=0; i<cart.items.length; i++) {\r\n            soma += cart.items[i].produto.preco * cart.items[i].quantidade;\r\n        }\r\n        return soma;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/cart.service.ts","import { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class ImageUtilService {\r\n\r\n    /**\r\n     * Metodo que converte a imagem de base64 para blob\r\n     * @param dataURI \r\n     */\r\n    dataUriToBlob(dataURI) {\r\n        var byteString = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n        var ab = new ArrayBuffer(byteString.length);\r\n        var ia = new Uint8Array(ab);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        return new Blob([ab], { type: mimeString });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/image-util.service.ts","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { API_CONFIG } from \"../../config/api.config\";\r\nimport { ClienteDTO } from \"../../models/cliente.dto\";\r\nimport { ImageUtilService } from \"../image-util.service\";\r\nimport { StorageService } from \"../storage.service\";\r\n\r\n\r\n@Injectable()\r\nexport class ClienteService {\r\n\r\n    constructor(\r\n        public http: HttpClient, \r\n        public storage: StorageService,\r\n        public imageUtilService: ImageUtilService) {\r\n    }\r\n\r\n\r\n    /**\r\n     * Método que busca um usuario por email pogando por parametro o email digitado pelo usuario.\r\n     * \r\n     * Observable<ClienteDTO> -> A tipagem do metodo esta sendo retirada -> <ClienteDTO>\r\n     * COM ISSO SERA RETORNADO EXTAMANETO O OBJETO QUE VEM DO BACKEND\r\n     * @param email \r\n     */\r\n    findByEmail(email: string) /*: Observable<ClienteDTO>*/ {\r\n\r\n       // let token = this.storage.getLocalUser().token; // let token -> variavel temporaria\r\n\r\n        // Cabeçalho que sera enviado\r\n       // let authHeader = new HttpHeaders({'Authorization': 'Bearer ' + token});\r\n\r\n        return this.http.get /*<ClienteDTO>*/(\r\n            `${API_CONFIG.baseUrl}/clientes/email?value=${email}`);\r\n           // {'headers': authHeader}); //passa o cabeçalho para a requisição\r\n    }\r\n\r\n\r\n    // Busca um cliente pelo ID\r\n    findById(id: string) {\r\n        return this.http.get(`${API_CONFIG.baseUrl}/clientes/${id}`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Metodo que busca a imagem do Usuario no bucket da amazon.\r\n     * Recebe um Id, Observable<any> -> any e um tipo do typeScript que aceita qq coisa(casa com todo mundo).\r\n     * cp${id} -> cp e o prefixo da imagem e id do cliente\r\n     * {responseType : 'blob'} -> resposta blob, é uma imagem e não um JSON\r\n     * @param id \r\n     */\r\n    getImageFromBucket(id : string) : Observable<any> {\r\n        let url = `${API_CONFIG.bucketBaseUrl}/cp${id}.jpg` \r\n        return this.http.get(url, {responseType : 'blob'});\r\n    }\r\n\r\n\r\n    /**\r\n     * Método para inserir cliente\r\n     * @param obj \r\n     */\r\n    insert(obj : ClienteDTO){\r\n       return this.http.post(`${API_CONFIG.baseUrl}/clientes`, obj, \r\n       {\r\n          observe: 'response',\r\n          responseType: 'text' // Como o corpo vem vazio isso evita o erro de parse do JSON\r\n       }\r\n       );\r\n    }\r\n\r\n\r\n    /**\r\n     * Metodo que faz upload da foto\r\n     * @param picture \r\n     */\r\n    uploadPicture(picture) {\r\n        let pictureBlob = this.imageUtilService.dataUriToBlob(picture); // Convertendo imagem de base64 para blob\r\n        let formData : FormData = new FormData(); // Instanciado um objeto do tipo FormData(). Quando e feita a requisição o parametro e enviado no tipo formData\r\n        formData.set('file', pictureBlob, 'file.png'); // Passando os parametros da imagem. 'file'-> nome do atributo. pictureBlob-> valor do atributo(arquivo). 'file.png'-> nome do arquivo\r\n        return this.http.post(\r\n            `${API_CONFIG.baseUrl}/clientes/picture`, \r\n            formData, // Objeto que sera enviado\r\n            { \r\n                observe: 'response', \r\n                responseType: 'text'\r\n            }\r\n        ); \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/cliente.service.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { API_CONFIG } from '../../config/api.config';\r\nimport { Observable } from 'rxjs/Rx'; // IMPORTANTE: IMPORT ATUALIZADO\r\nimport { ProdutoDTO } from '../../models/produto.dto';\r\n\r\n@Injectable()\r\nexport class ProdutoService {\r\n\r\n  constructor(public http: HttpClient) {\r\n  }\r\n\r\n  findById(produto_id : string) {\r\n    return this.http.get<ProdutoDTO>(`${API_CONFIG.baseUrl}/produtos/${produto_id}`);\r\n  }\r\n\r\n  findByCategoria(categoria_id : string, page : number = 0, linesPerPage : number = 24) {\r\n    return this.http.get(`${API_CONFIG.baseUrl}/produtos/?categorias=${categoria_id}&page=${page}&linesPerPage=${linesPerPage}`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Metodo que busca as fotos miniatura das categorias do tipo Observable<any>\r\n   * responseType : 'blob' -> Resposta para imagem\r\n   * @param id \r\n   */\r\n  getSmallImageFromBucket(id : string) : Observable<any> {\r\n    let url = `${API_CONFIG.bucketBaseUrl}/prod${id}-small.jpg`\r\n    return this.http.get(url, {responseType : 'blob'});\r\n  }  \r\n\r\n\r\n  /**\r\n   * Metodo que busca as fotos das categorias do tipo Observable<any>\r\n   * responseType : 'blob' -> Resposta para imagem\r\n   * @param id \r\n   */\r\n  getImageFromBucket(id : string) : Observable<any> {\r\n    let url = `${API_CONFIG.bucketBaseUrl}/prod${id}.jpg`\r\n    return this.http.get(url, {responseType : 'blob'});\r\n  }  \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/produto.service.ts","import {  Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { API_CONFIG } from \"../../config/api.config\";\r\nimport { Observable } from \"rxjs/Rx\"; // IMPORTAÇÃO CORRETA DO Observable\r\nimport { CategoriaDTO } from \"../../models/categoria.dto\";\r\n\r\n@Injectable() // A Classe pode ser injetada em outras classes\r\nexport class CategoriaService {\r\n\r\n    constructor(public http: HttpClient) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Método que busca todas as categorias\r\n     * A crase `` permite colocar variaveis no string sem precisar ficar concatenando o operador +\r\n     * ${} -> Permite colocar variaveis\r\n     * Retorna o tipo de dados -> CategoriaDTO[] Lista de CategoriaDTO\r\n     * get<CategoriaDTO[]> -> get tipado = Lista de CategoriaDTO\r\n     * \r\n     * OBS : A Requisição HTTP é assincrona( CHAMADA AJAX ) e necessario se inscrever para receber essa requisição\r\n     * O Angular encapsula essa requisição assincrona por meio de um objeto chamado Observable.\r\n     * O retorno do método então e do tipo Observable< CategoriaDTO[] > \r\n     */\r\n    findAll() : Observable <CategoriaDTO[]> {\r\n\r\n        return this.http.get<CategoriaDTO[]> (`${API_CONFIG.baseUrl}/categorias`);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/categoria.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 199;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 199\n// module chunks = 10","var map = {\n\t\"../pages/cart/cart.module.ngfactory\": [\n\t\t647,\n\t\t8\n\t],\n\t\"../pages/categorias/categorias.module.ngfactory\": [\n\t\t648,\n\t\t3\n\t],\n\t\"../pages/home/home.module.ngfactory\": [\n\t\t649,\n\t\t9\n\t],\n\t\"../pages/order-confirmation/order-confirmation.module.ngfactory\": [\n\t\t651,\n\t\t7\n\t],\n\t\"../pages/payment/payment.module.ngfactory\": [\n\t\t650,\n\t\t4\n\t],\n\t\"../pages/pick-address/pick-address.module.ngfactory\": [\n\t\t652,\n\t\t6\n\t],\n\t\"../pages/produto-detail/produto-detail.module.ngfactory\": [\n\t\t654,\n\t\t2\n\t],\n\t\"../pages/produtos/produtos.module.ngfactory\": [\n\t\t653,\n\t\t1\n\t],\n\t\"../pages/profile/profile.module.ngfactory\": [\n\t\t655,\n\t\t5\n\t],\n\t\"../pages/signup/signup.module.ngfactory\": [\n\t\t656,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 227;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 227\n// module chunks = 10","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../../node_modules/ionic-angular/components/item/item.ngfactory\";\r\nimport * as i2 from \"ionic-angular/components/item/item\";\r\nimport * as i3 from \"ionic-angular/util/form\";\r\nimport * as i4 from \"ionic-angular/config/config\";\r\nimport * as i5 from \"ionic-angular/components/item/item-reorder\";\r\nimport * as i6 from \"ionic-angular/components/item/item-content\";\r\nimport * as i7 from \"ionic-angular/components/menu/menu-close\";\r\nimport * as i8 from \"ionic-angular/components/app/menu-controller\";\r\nimport * as i9 from \"../../node_modules/ionic-angular/components/menu/menu.ngfactory\";\r\nimport * as i10 from \"ionic-angular/components/split-pane/split-pane\";\r\nimport * as i11 from \"ionic-angular/components/menu/menu\";\r\nimport * as i12 from \"ionic-angular/platform/platform\";\r\nimport * as i13 from \"ionic-angular/platform/keyboard\";\r\nimport * as i14 from \"ionic-angular/gestures/gesture-controller\";\r\nimport * as i15 from \"ionic-angular/platform/dom-controller\";\r\nimport * as i16 from \"ionic-angular/components/app/app\";\r\nimport * as i17 from \"ionic-angular/components/toolbar/toolbar-header\";\r\nimport * as i18 from \"ionic-angular/navigation/view-controller\";\r\nimport * as i19 from \"../../node_modules/ionic-angular/components/toolbar/toolbar.ngfactory\";\r\nimport * as i20 from \"ionic-angular/components/toolbar/toolbar\";\r\nimport * as i21 from \"../../node_modules/ionic-angular/components/toolbar/toolbar-title.ngfactory\";\r\nimport * as i22 from \"ionic-angular/components/toolbar/toolbar-title\";\r\nimport * as i23 from \"ionic-angular/components/toolbar/navbar\";\r\nimport * as i24 from \"../../node_modules/ionic-angular/components/content/content.ngfactory\";\r\nimport * as i25 from \"ionic-angular/components/content/content\";\r\nimport * as i26 from \"ionic-angular/navigation/nav-controller\";\r\nimport * as i27 from \"ionic-angular/components/list/list\";\r\nimport * as i28 from \"@angular/common\";\r\nimport * as i29 from \"../../node_modules/ionic-angular/components/nav/nav.ngfactory\";\r\nimport * as i30 from \"ionic-angular/components/nav/nav\";\r\nimport * as i31 from \"ionic-angular/transitions/transition-controller\";\r\nimport * as i32 from \"ionic-angular/navigation/deep-linker\";\r\nimport * as i33 from \"./app.component\";\r\nimport * as i34 from \"@ionic-native/status-bar/index\";\r\nimport * as i35 from \"@ionic-native/splash-screen/index\";\r\nimport * as i36 from \"../services/auth.service\";\r\nvar styles_MyApp = [];\r\nvar RenderType_MyApp = i0.ɵcrt({ encapsulation: 2, styles: styles_MyApp, data: {} });\r\nexport { RenderType_MyApp as RenderType_MyApp };\r\nfunction View_MyApp_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"button\", [[\"class\", \"item item-block\"], [\"ion-item\", \"\"], [\"menuClose\", \"\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\r\n        var pd_0 = (i0.ɵnov(_v, 6).close() !== false);\r\n        ad = (pd_0 && ad);\r\n    } if ((\"click\" === en)) {\r\n        var pd_1 = (_co.openPage(_v.context.$implicit) !== false);\r\n        ad = (pd_1 && ad);\r\n    } return ad; }, i1.View_Item_0, i1.RenderType_Item)), i0.ɵdid(1, 1097728, null, 3, i2.Item, [i3.Form, i4.Config, i0.ElementRef, i0.Renderer, [2, i5.ItemReorder]], null, null), i0.ɵqud(335544320, 4, { contentLabel: 0 }), i0.ɵqud(603979776, 5, { _buttons: 1 }), i0.ɵqud(603979776, 6, { _icons: 1 }), i0.ɵdid(5, 16384, null, 0, i6.ItemContent, [], null, null), i0.ɵdid(6, 16384, null, 0, i7.MenuClose, [i8.MenuController], { menuClose: [0, \"menuClose\"] }, null), (_l()(), i0.ɵted(7, 2, [\"\\n        \", \"\\n      \"]))], function (_ck, _v) { var currVal_0 = \"\"; _ck(_v, 6, 0, currVal_0); }, function (_ck, _v) { var currVal_1 = _v.context.$implicit.title; _ck(_v, 7, 0, currVal_1); }); }\r\nexport function View_MyApp_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { nav: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 29, \"ion-menu\", [[\"role\", \"navigation\"], [\"type\", \"overlay\"]], null, null, null, i9.View_Menu_0, i9.RenderType_Menu)), i0.ɵprd(6144, null, i10.RootNode, null, [i11.Menu]), i0.ɵdid(3, 245760, null, 2, i11.Menu, [i8.MenuController, i0.ElementRef, i4.Config, i12.Platform, i0.Renderer, i13.Keyboard, i14.GestureController, i15.DomController, i16.App], { content: [0, \"content\"], type: [1, \"type\"] }, null), i0.ɵqud(335544320, 2, { menuContent: 0 }), i0.ɵqud(335544320, 3, { menuNav: 0 }), (_l()(), i0.ɵted(-1, 0, [\"\\n  \"])), (_l()(), i0.ɵeld(7, 0, null, 0, 10, \"ion-header\", [], null, null, null, null, null)), i0.ɵdid(8, 16384, null, 0, i17.Header, [i4.Config, i0.ElementRef, i0.Renderer, [2, i18.ViewController]], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵeld(10, 0, null, null, 6, \"ion-toolbar\", [[\"class\", \"toolbar\"]], [[2, \"statusbar-padding\", null]], null, null, i19.View_Toolbar_0, i19.RenderType_Toolbar)), i0.ɵdid(11, 49152, null, 0, i20.Toolbar, [i4.Config, i0.ElementRef, i0.Renderer], null, null), (_l()(), i0.ɵted(-1, 3, [\"\\n      \"])), (_l()(), i0.ɵeld(13, 0, null, 3, 2, \"ion-title\", [], null, null, null, i21.View_ToolbarTitle_0, i21.RenderType_ToolbarTitle)), i0.ɵdid(14, 49152, null, 0, i22.ToolbarTitle, [i4.Config, i0.ElementRef, i0.Renderer, [2, i20.Toolbar], [2, i23.Navbar]], null, null), (_l()(), i0.ɵted(-1, 0, [\"Menu\"])), (_l()(), i0.ɵted(-1, 3, [\"\\n    \"])), (_l()(), i0.ɵted(-1, null, [\"\\n  \"])), (_l()(), i0.ɵted(-1, 0, [\"\\n\\n  \"])), (_l()(), i0.ɵeld(19, 0, null, 0, 10, \"ion-content\", [], [[2, \"statusbar-padding\", null], [2, \"has-refresher\", null]], null, null, i24.View_Content_0, i24.RenderType_Content)), i0.ɵdid(20, 4374528, [[2, 4]], 0, i25.Content, [i4.Config, i12.Platform, i15.DomController, i0.ElementRef, i0.Renderer, i16.App, i13.Keyboard, i0.NgZone, [2, i18.ViewController], [2, i26.NavController]], null, null), (_l()(), i0.ɵted(-1, 1, [\"\\n    \"])), (_l()(), i0.ɵeld(22, 0, null, 1, 6, \"ion-list\", [], null, null, null, null, null)), i0.ɵdid(23, 16384, null, 0, i27.List, [i4.Config, i0.ElementRef, i0.Renderer, i12.Platform, i14.GestureController, i15.DomController], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MyApp_1)), i0.ɵdid(27, 802816, null, 0, i28.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n  \"])), (_l()(), i0.ɵted(-1, 0, [\"\\n\\n\"])), (_l()(), i0.ɵted(-1, null, [\"\\n\\n\"])), (_l()(), i0.ɵted(-1, null, [\"\\n\"])), (_l()(), i0.ɵeld(33, 0, null, null, 2, \"ion-nav\", [[\"swipeBackEnabled\", \"false\"]], null, null, null, i29.View_Nav_0, i29.RenderType_Nav)), i0.ɵprd(6144, null, i10.RootNode, null, [i30.Nav]), i0.ɵdid(35, 4374528, [[1, 4], [\"content\", 4]], 0, i30.Nav, [[2, i18.ViewController], [2, i26.NavController], i16.App, i4.Config, i12.Platform, i0.ElementRef, i0.NgZone, i0.Renderer, i0.ComponentFactoryResolver, i14.GestureController, i31.TransitionController, [2, i32.DeepLinker], i15.DomController, i0.ErrorHandler], { swipeBackEnabled: [0, \"swipeBackEnabled\"], root: [1, \"root\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵnov(_v, 35); var currVal_1 = \"overlay\"; _ck(_v, 3, 0, currVal_0, currVal_1); var currVal_5 = _co.pages; _ck(_v, 27, 0, currVal_5); var currVal_6 = \"false\"; var currVal_7 = _co.rootPage; _ck(_v, 35, 0, currVal_6, currVal_7); }, function (_ck, _v) { var currVal_2 = i0.ɵnov(_v, 11)._sbPadding; _ck(_v, 10, 0, currVal_2); var currVal_3 = i0.ɵnov(_v, 20).statusbarPadding; var currVal_4 = i0.ɵnov(_v, 20)._hasRefresher; _ck(_v, 19, 0, currVal_3, currVal_4); }); }\r\nexport function View_MyApp_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_MyApp_0, RenderType_MyApp)), i0.ɵdid(1, 49152, null, 0, i33.MyApp, [i12.Platform, i34.StatusBar, i35.SplashScreen, i36.AuthService], null, null)], null, null); }\r\nvar MyAppNgFactory = i0.ɵccf(\"ng-component\", i33.MyApp, View_MyApp_Host_0, {}, {}, []);\r\nexport { MyAppNgFactory as MyAppNgFactory };\r\n//# sourceMappingURL=app.component.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ngfactory.js.pre-build-optimizer.js","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AuthService } from '../services/auth.service';\n\n\n\n/**\n * Pagina controladora da pagina app.html ( TODAS AS PAGINAS HTML TEM UM CONTROLADOR )\n */\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: String = 'HomePage'; // Configuração da página inicial do aplicativo\n\n  pages: Array<{ title: string, component: String }>;\n\n  constructor(\n    public platform: Platform,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    public auth: AuthService) {\n    this.initializeApp();\n\n    // Paginas que aparecem no menu\n    this.pages = [\n      { title: 'Profile', component: 'ProfilePage' },\n      { title: 'Categorias', component: 'CategoriasPage' },\n      { title: 'Carrinho', component: 'CartPage' },\n      { title: 'Logout', component: '' }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  /**\n   * Tipando o page que vai ser um objeto que tera titulo e um componente, com isso pode ser acessado os atributos.\n   * @param page \n   */\n  openPage(page: { title: string, component: string }) {\n    switch (page.title) {\n      case 'Logout':\n        this.auth.logout(); // retira o token do usuario do armazenamento(LocalStorage)\n        this.nav.setRoot('HomePage'); // Redireciona para pagina de login\n        break;\n\n      default:\n        this.nav.setRoot(page.component);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// Classe de tratamento de erros global. Existe a possibilidade de tratamento pelo Controller\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx'; // IMPORTANTE: IMPORT ATUALIZADO\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { FieldMessage } from '../../models/fieldmessage';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public storage: StorageService, public alertCtrl: AlertController) {\r\n    }\r\n\r\n    /**\r\n     * Método que intercepta as requisições\r\n     */\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // console.log(\"Passou no interceptor\");\r\n        return next.handle(req)\r\n            .catch((error, caught) => {\r\n\r\n                let errorObj = error;\r\n                if (errorObj.error) {\r\n                    errorObj = errorObj.error;\r\n                }\r\n                /** Se a resposta não vier no formato JSON, ou seja, não tiver o campo status, vira no formato text, \r\n                 * então sera feita a conversão para JSON */\r\n                if (!errorObj.status) {\r\n                    errorObj = JSON.parse(errorObj);\r\n                }\r\n\r\n                console.log(\"Erro detectado pelo interceptor:\"); // A responsabilidade de imprimir na tela e aqui do interceptor\r\n                console.log(errorObj);\r\n\r\n                /**\r\n                 * Tratamento de erros especificos do status.\r\n                 * Tratamento do erro 403.\r\n                 * \r\n                 * Para testar, no console do navegador inserir um token invalido:\r\n                 * localStorage.setItem('localUser',\r\n                  '{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJuZWxpby5jdXJzb3NAZ21haWwuY29tIiwiZXhwIjoxNTEzNjkxMTE1fQ.\r\n                  Bg8nyUf5Hsw2CC3dQffZrip822eFB18jNLrsySe51Eb-SioUH-uq7CQ4dWoBixZmzT-PWdE1iZZ1uRhuaaaaa\",\r\n                 \"email\":\"nelio.cursos@gmail.com\"}')\r\n                 */\r\n                switch (errorObj.status) {\r\n                    case 401:\r\n                        this.handle401();\r\n                        break;\r\n                    case 403:\r\n                        this.handle403();\r\n                        break;\r\n                    case 422:\r\n                        this.handle422(errorObj);\r\n                        break;\r\n\r\n                    default:\r\n                        this.handleDefaultError(errorObj);\r\n                }\r\n                return Observable.throw(error);\r\n            }) as any;\r\n    }\r\n\r\n    /**\r\n     * Método que trata o 403.\r\n     * Força a limpeza do localStorage(Um usuario que estava no storage esta invalido)\r\n     */\r\n    handle403() {\r\n        this.storage.setLocalUser(null);\r\n    }\r\n\r\n    handle401() {\r\n        let alert = this.alertCtrl.create({\r\n            title: 'Erro 401: falha de autenticação',\r\n            message: 'Email ou senha incorretos',\r\n            /**\r\n             * Para sair do alert o usuatio precisa apertar no botão do alert, isso é opcional,\r\n             * mas dessa forma pode ser feito um tratamento especial para ele\r\n             */\r\n            enableBackdropDismiss: false,\r\n            buttons: [\r\n                {\r\n                    text: 'Ok'\r\n                }\r\n            ]\r\n        });\r\n        alert.present(); // Mostra o botão\r\n    }\r\n\r\n\r\n    handle422(errorObj){\r\n        let alert = this.alertCtrl.create({\r\n            title: 'Erro 422: Validação',\r\n            message: this.listErrors(errorObj.errors), // Função que monta a lista de erros de acordo com backend classe ValidationError variavel = private List<FieldMessage> errors = new ArrayList<>();\r\n            enableBackdropDismiss: false,\r\n            buttons: [\r\n                {\r\n                    text: 'Ok'\r\n                }\r\n            ]\r\n        });\r\n        alert.present(); // Mostra o botão\r\n    }\r\n\r\n    /**\r\n     * Metodo de error\r\n     * @param errorObj \r\n     */\r\n    handleDefaultError(errorObj) {\r\n        let alert = this.alertCtrl.create({\r\n            title: 'Erro ' + errorObj.status + ': ' + errorObj.error,\r\n            message: errorObj.message,\r\n            enableBackdropDismiss: false,\r\n            buttons: [\r\n                {\r\n                    text: 'Ok'\r\n                }\r\n            ]\r\n        });\r\n        alert.present(); // Mostra o botão\r\n    }\r\n\r\n    // Recebe uma lista de FieldMessage[]\r\n    listErrors(messages: FieldMessage[]) : string {\r\n        let s : string = '';\r\n        /*Percorre todos os elementos da lista de mesagem acrescentando um <p>paragrafo destacando o nome do campo<strong> mais a descrição da mesagem*/\r\n        for(var i = 0; i < messages.length; i++){\r\n            s = s + '<p><strong>' + messages[i].fieldName + \"</strong>: \" + messages[i].message\r\n        }\r\n        return s;\r\n    }\r\n}\r\n\r\n\r\n\r\n// Declaração do provider do interceptor\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true,\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/interceptors/error-interceptor.ts","// Classe que intercepta o token nas requisições\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx'; // IMPORTANTE: IMPORT ATUALIZADO\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { API_CONFIG } from '../../config/api.config';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public storage: StorageService) {\r\n    }\r\n\r\n    /**\r\n     * Método que intercepta as requisições\r\n     * \r\n     * Para inserir o cabeçalho na requisição e necessario fazer um clone(copia) dessa requisição.\r\n     * \r\n     * O cabeçalho(header Authorization) inserido na requisição so deve ser enviado para o BACKEND, ou seja\r\n     * quando for uma requisição vinda de outro local não precisa ser enviado o cabeçalho, a lógica é\r\n     * a comparar as URLs da requisição\r\n     */\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // console.log(\"Passou no interceptor\");\r\n\r\n        let localUser = this.storage.getLocalUser();\r\n\r\n        let N = API_CONFIG.baseUrl.length; //Pegando o tamanho da string da baseUrl para comparação\r\n\r\n        // Recortando a string da url a partir do primeiro caracter ate o tamanho total da baseUrl\r\n        let requestToAPI = req.url.substring(0, N) == API_CONFIG.baseUrl;\r\n\r\n        if (localUser && requestToAPI) {\r\n            const authReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + localUser.token) });\r\n            return next.handle(authReq);\r\n        } else {\r\n            return next.handle(req); // Se não existir o localUser ele propaga a requisição original.\r\n        }\r\n\r\n    }\r\n}\r\n\r\n// Declaração do provider do interceptor\r\nexport const AuthInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/interceptors/auth-interceptor.ts","/**\n * TODAS AS CLASSES QUE SÃO UTILIZADAS NO CORPO DO SCRIPT PRECISAM ESTAR IMPORTADAS AQUI EMBAIXO\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'; // Import do HTTPCLIENT\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { CategoriaService } from '../services/domain/categoria.service';\nimport { ErrorInterceptorProvider } from './interceptors/error-interceptor';\nimport { AuthService } from '../services/auth.service';\nimport { StorageService } from '../services/storage.service';\nimport { ClienteService } from '../services/domain/cliente.service';\nimport { AuthInterceptorProvider } from './interceptors/auth-interceptor';\nimport { ProdutoService } from '../services/domain/produto.service';\nimport { CartService } from '../services/domain/cart.service';\nimport { ImageUtilService } from '../services/image-util.service';\n\n/**\n * Decorator -> é uma anotação que contém configurações para alterar a classe\n */\n@NgModule({\n  declarations: [ // Aqui ficam a lista de componentes ou paginas que fazem parte deste modulo\n    MyApp\n  ],\n  imports: [ // Lista de modulos que são importados por este modulo\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/cart/cart.module.ngfactory#CartPageModuleNgFactory', name: 'CartPage', segment: 'cart', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/categorias/categorias.module.ngfactory#CategoriasPageModuleNgFactory', name: 'CategoriasPage', segment: 'categorias', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/home/home.module.ngfactory#HomeModuleNgFactory', name: 'HomePage', segment: 'home', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/payment/payment.module.ngfactory#PaymentPageModuleNgFactory', name: 'PaymentPage', segment: 'payment', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/order-confirmation/order-confirmation.module.ngfactory#OrderConfirmationPageModuleNgFactory', name: 'OrderConfirmationPage', segment: 'order-confirmation', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/pick-address/pick-address.module.ngfactory#PickAddressPageModuleNgFactory', name: 'PickAddressPage', segment: 'pick-address', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/produtos/produtos.module.ngfactory#ProdutosPageModuleNgFactory', name: 'ProdutosPage', segment: 'produtos', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/produto-detail/produto-detail.module.ngfactory#ProdutoDetailPageModuleNgFactory', name: 'ProdutoDetailPage', segment: 'produto-detail', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/profile/profile.module.ngfactory#ProfilePageModuleNgFactory', name: 'ProfilePage', segment: 'profile', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/signup/signup.module.ngfactory#SignupPageModuleNgFactory', name: 'SignupPage', segment: 'signup', priority: 'low', defaultHistory: [] }\n  ]\n}),\n  ],\n  bootstrap: [IonicApp], // Bootstrap -> tem a indicação de como a aplicação vai iniciar\n  entryComponents: [  // Quando o declaration for uma pagina e não um componente, essa pagina precisa ser declarada aqui também\n    MyApp\n  ],\n  providers: [ // Aqui se declara as classes que os objetos injetaveis sejam uma instancia unica para este modulo\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    \n    /** CategoriaService -> Registro do serviço no escopo global da aplicação, \n     * pois e um serviço que vai ser muito utilizado.\n     * Unica instancia servindo toda aplicação\n     */\n    CategoriaService,\n    /**\n     * Colocar o cabeçalho na requisição( AuthInterceptorProvider ) tem que ser feito antes do tratamento de erro.\n     * Para controlar a ordem em que os interceptors serão executados é so colocar um antes do outro \n     * aqui no providers.\n     */\n    AuthInterceptorProvider, \n    ErrorInterceptorProvider,\n    AuthService,\n    StorageService,\n    ClienteService,\n    ProdutoService,\n    CartService,\n    ImageUtilService\n  ]\n})\n/**\n * Export -> permite que uma classe ou elemento import o AppModule( torna-se visivel em outros lugares )\n */\nexport class AppModule {} \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./app.module\";\r\nimport * as i2 from \"ionic-angular/components/app/app-root\";\r\nimport * as i3 from \"../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory\";\r\nimport * as i4 from \"../../node_modules/ionic-angular/components/alert/alert-component.ngfactory\";\r\nimport * as i5 from \"../../node_modules/ionic-angular/components/app/app-root.ngfactory\";\r\nimport * as i6 from \"../../node_modules/ionic-angular/components/loading/loading-component.ngfactory\";\r\nimport * as i7 from \"../../node_modules/ionic-angular/components/modal/modal-component.ngfactory\";\r\nimport * as i8 from \"../../node_modules/ionic-angular/components/picker/picker-component.ngfactory\";\r\nimport * as i9 from \"../../node_modules/ionic-angular/components/popover/popover-component.ngfactory\";\r\nimport * as i10 from \"../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory\";\r\nimport * as i11 from \"../../node_modules/ionic-angular/components/toast/toast-component.ngfactory\";\r\nimport * as i12 from \"./app.component.ngfactory\";\r\nimport * as i13 from \"@angular/common\";\r\nimport * as i14 from \"@angular/platform-browser\";\r\nimport * as i15 from \"ionic-angular/gestures/gesture-config\";\r\nimport * as i16 from \"@angular/common/http\";\r\nimport * as i17 from \"../services/storage.service\";\r\nimport * as i18 from \"ionic-angular/components/alert/alert-controller\";\r\nimport * as i19 from \"ionic-angular/components/app/app\";\r\nimport * as i20 from \"ionic-angular/config/config\";\r\nimport * as i21 from \"./interceptors/auth-interceptor\";\r\nimport * as i22 from \"./interceptors/error-interceptor\";\r\nimport * as i23 from \"@angular/forms\";\r\nimport * as i24 from \"ionic-angular/components/action-sheet/action-sheet-controller\";\r\nimport * as i25 from \"ionic-angular/util/events\";\r\nimport * as i26 from \"ionic-angular/util/form\";\r\nimport * as i27 from \"ionic-angular/tap-click/haptic\";\r\nimport * as i28 from \"ionic-angular/platform/platform\";\r\nimport * as i29 from \"ionic-angular/platform/keyboard\";\r\nimport * as i30 from \"ionic-angular/platform/dom-controller\";\r\nimport * as i31 from \"ionic-angular/components/loading/loading-controller\";\r\nimport * as i32 from \"ionic-angular/module\";\r\nimport * as i33 from \"ionic-angular/navigation/url-serializer\";\r\nimport * as i34 from \"ionic-angular/navigation/deep-linker\";\r\nimport * as i35 from \"ionic-angular/util/module-loader\";\r\nimport * as i36 from \"ionic-angular/components/modal/modal-controller\";\r\nimport * as i37 from \"ionic-angular/components/picker/picker-controller\";\r\nimport * as i38 from \"ionic-angular/components/popover/popover-controller\";\r\nimport * as i39 from \"ionic-angular/tap-click/tap-click\";\r\nimport * as i40 from \"ionic-angular/gestures/gesture-controller\";\r\nimport * as i41 from \"ionic-angular/components/toast/toast-controller\";\r\nimport * as i42 from \"ionic-angular/transitions/transition-controller\";\r\nimport * as i43 from \"@ionic-native/status-bar/index\";\r\nimport * as i44 from \"@ionic-native/splash-screen/index\";\r\nimport * as i45 from \"../services/domain/categoria.service\";\r\nimport * as i46 from \"../services/domain/cart.service\";\r\nimport * as i47 from \"../services/auth.service\";\r\nimport * as i48 from \"../services/image-util.service\";\r\nimport * as i49 from \"../services/domain/cliente.service\";\r\nimport * as i50 from \"../services/domain/produto.service\";\r\nimport * as i51 from \"ionic-angular/util/ionic-error-handler\";\r\nimport * as i52 from \"ionic-angular/platform/platform-registry\";\r\nimport * as i53 from \"ionic-angular/components/app/menu-controller\";\r\nimport * as i54 from \"ionic-angular/util/ng-module-loader\";\r\nimport * as i55 from \"ionic-angular/config/mode-registry\";\r\nimport * as i56 from \"./app.component\";\r\nvar AppModuleNgFactory = i0.ɵcmf(i1.AppModule, [i2.IonicApp], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i3.ActionSheetCmpNgFactory, i4.AlertCmpNgFactory, i5.IonicAppNgFactory, i6.LoadingCmpNgFactory, i7.ModalCmpNgFactory, i8.PickerCmpNgFactory, i9.PopoverCmpNgFactory, i10.SelectPopoverNgFactory, i11.ToastCmpNgFactory, i12.MyAppNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(5120, i0.LOCALE_ID, i0.ɵq, [[3, i0.LOCALE_ID]]), i0.ɵmpd(4608, i13.NgLocalization, i13.NgLocaleLocalization, [i0.LOCALE_ID, [2, i13.ɵa]]), i0.ɵmpd(5120, i0.APP_ID, i0.ɵi, []), i0.ɵmpd(5120, i0.IterableDiffers, i0.ɵn, []), i0.ɵmpd(5120, i0.KeyValueDiffers, i0.ɵo, []), i0.ɵmpd(4608, i14.DomSanitizer, i14.ɵe, [i13.DOCUMENT]), i0.ɵmpd(6144, i0.Sanitizer, null, [i14.DomSanitizer]), i0.ɵmpd(4608, i14.HAMMER_GESTURE_CONFIG, i15.IonicGestureConfig, []), i0.ɵmpd(5120, i14.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p1_0, p2_0, p2_1) { return [new i14.ɵDomEventsPlugin(p0_0, p0_1), new i14.ɵKeyEventsPlugin(p1_0), new i14.ɵHammerGesturesPlugin(p2_0, p2_1)]; }, [i13.DOCUMENT, i0.NgZone, i13.DOCUMENT, i13.DOCUMENT, i14.HAMMER_GESTURE_CONFIG]), i0.ɵmpd(4608, i14.EventManager, i14.EventManager, [i14.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.ɵmpd(135680, i14.ɵDomSharedStylesHost, i14.ɵDomSharedStylesHost, [i13.DOCUMENT]), i0.ɵmpd(4608, i14.ɵDomRendererFactory2, i14.ɵDomRendererFactory2, [i14.EventManager, i14.ɵDomSharedStylesHost]), i0.ɵmpd(6144, i0.RendererFactory2, null, [i14.ɵDomRendererFactory2]), i0.ɵmpd(6144, i14.ɵSharedStylesHost, null, [i14.ɵDomSharedStylesHost]), i0.ɵmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.ɵmpd(4608, i14.Meta, i14.Meta, [i13.DOCUMENT]), i0.ɵmpd(4608, i14.Title, i14.Title, [i13.DOCUMENT]), i0.ɵmpd(4608, i16.HttpXsrfTokenExtractor, i16.ɵh, [i13.DOCUMENT, i0.PLATFORM_ID, i16.ɵf]), i0.ɵmpd(4608, i16.ɵi, i16.ɵi, [i16.HttpXsrfTokenExtractor, i16.ɵg]), i0.ɵmpd(4608, i17.StorageService, i17.StorageService, []), i0.ɵmpd(4608, i18.AlertController, i18.AlertController, [i19.App, i20.Config]), i0.ɵmpd(5120, i16.HTTP_INTERCEPTORS, function (p0_0, p1_0, p2_0, p2_1) { return [p0_0, new i21.AuthInterceptor(p1_0), new i22.ErrorInterceptor(p2_0, p2_1)]; }, [i16.ɵi, i17.StorageService, i17.StorageService, i18.AlertController]), i0.ɵmpd(4608, i16.ɵe, i16.ɵe, []), i0.ɵmpd(6144, i16.XhrFactory, null, [i16.ɵe]), i0.ɵmpd(4608, i16.HttpXhrBackend, i16.HttpXhrBackend, [i16.XhrFactory]), i0.ɵmpd(6144, i16.HttpBackend, null, [i16.HttpXhrBackend]), i0.ɵmpd(4608, i16.HttpHandler, i16.ɵc, [i16.HttpBackend, i0.Injector]), i0.ɵmpd(4608, i16.HttpClient, i16.HttpClient, [i16.HttpHandler]), i0.ɵmpd(4608, i23.ɵi, i23.ɵi, []), i0.ɵmpd(4608, i23.FormBuilder, i23.FormBuilder, []), i0.ɵmpd(4608, i24.ActionSheetController, i24.ActionSheetController, [i19.App, i20.Config]), i0.ɵmpd(4608, i25.Events, i25.Events, []), i0.ɵmpd(4608, i26.Form, i26.Form, []), i0.ɵmpd(4608, i27.Haptic, i27.Haptic, [i28.Platform]), i0.ɵmpd(4608, i29.Keyboard, i29.Keyboard, [i20.Config, i28.Platform, i0.NgZone, i30.DomController]), i0.ɵmpd(4608, i31.LoadingController, i31.LoadingController, [i19.App, i20.Config]), i0.ɵmpd(5120, i13.LocationStrategy, i32.provideLocationStrategy, [i13.PlatformLocation, [2, i13.APP_BASE_HREF], i20.Config]), i0.ɵmpd(4608, i13.Location, i13.Location, [i13.LocationStrategy]), i0.ɵmpd(5120, i33.UrlSerializer, i33.setupUrlSerializer, [i19.App, i33.DeepLinkConfigToken]), i0.ɵmpd(5120, i34.DeepLinker, i34.setupDeepLinker, [i19.App, i33.UrlSerializer, i13.Location, i35.ModuleLoader, i0.ComponentFactoryResolver]), i0.ɵmpd(4608, i36.ModalController, i36.ModalController, [i19.App, i20.Config, i34.DeepLinker]), i0.ɵmpd(4608, i37.PickerController, i37.PickerController, [i19.App, i20.Config]), i0.ɵmpd(4608, i38.PopoverController, i38.PopoverController, [i19.App, i20.Config, i34.DeepLinker]), i0.ɵmpd(4608, i39.TapClick, i39.TapClick, [i20.Config, i28.Platform, i30.DomController, i19.App, i40.GestureController]), i0.ɵmpd(4608, i41.ToastController, i41.ToastController, [i19.App, i20.Config]), i0.ɵmpd(4608, i42.TransitionController, i42.TransitionController, [i28.Platform, i20.Config]), i0.ɵmpd(4608, i43.StatusBar, i43.StatusBar, []), i0.ɵmpd(4608, i44.SplashScreen, i44.SplashScreen, []), i0.ɵmpd(4608, i45.CategoriaService, i45.CategoriaService, [i16.HttpClient]), i0.ɵmpd(4608, i46.CartService, i46.CartService, [i17.StorageService]), i0.ɵmpd(4608, i47.AuthService, i47.AuthService, [i16.HttpClient, i17.StorageService, i46.CartService]), i0.ɵmpd(4608, i48.ImageUtilService, i48.ImageUtilService, []), i0.ɵmpd(4608, i49.ClienteService, i49.ClienteService, [i16.HttpClient, i17.StorageService, i48.ImageUtilService]), i0.ɵmpd(4608, i50.ProdutoService, i50.ProdutoService, [i16.HttpClient]), i0.ɵmpd(512, i13.CommonModule, i13.CommonModule, []), i0.ɵmpd(512, i0.ErrorHandler, i51.IonicErrorHandler, []), i0.ɵmpd(256, i20.ConfigToken, {}, []), i0.ɵmpd(1024, i52.PlatformConfigToken, i52.providePlatformConfigs, []), i0.ɵmpd(1024, i28.Platform, i28.setupPlatform, [i14.DOCUMENT, i52.PlatformConfigToken, i0.NgZone]), i0.ɵmpd(1024, i20.Config, i20.setupConfig, [i20.ConfigToken, i28.Platform]), i0.ɵmpd(512, i30.DomController, i30.DomController, [i28.Platform]), i0.ɵmpd(512, i53.MenuController, i53.MenuController, []), i0.ɵmpd(512, i19.App, i19.App, [i20.Config, i28.Platform, [2, i53.MenuController]]), i0.ɵmpd(512, i40.GestureController, i40.GestureController, [i19.App]), i0.ɵmpd(256, i33.DeepLinkConfigToken, { links: [{ loadChildren: \"../pages/cart/cart.module.ngfactory#CartPageModuleNgFactory\", name: \"CartPage\", segment: \"cart\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/categorias/categorias.module.ngfactory#CategoriasPageModuleNgFactory\", name: \"CategoriasPage\", segment: \"categorias\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/home/home.module.ngfactory#HomeModuleNgFactory\", name: \"HomePage\", segment: \"home\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/payment/payment.module.ngfactory#PaymentPageModuleNgFactory\", name: \"PaymentPage\", segment: \"payment\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/order-confirmation/order-confirmation.module.ngfactory#OrderConfirmationPageModuleNgFactory\", name: \"OrderConfirmationPage\", segment: \"order-confirmation\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/pick-address/pick-address.module.ngfactory#PickAddressPageModuleNgFactory\", name: \"PickAddressPage\", segment: \"pick-address\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/produtos/produtos.module.ngfactory#ProdutosPageModuleNgFactory\", name: \"ProdutosPage\", segment: \"produtos\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/produto-detail/produto-detail.module.ngfactory#ProdutoDetailPageModuleNgFactory\", name: \"ProdutoDetailPage\", segment: \"produto-detail\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/profile/profile.module.ngfactory#ProfilePageModuleNgFactory\", name: \"ProfilePage\", segment: \"profile\", priority: \"low\", defaultHistory: [] }, { loadChildren: \"../pages/signup/signup.module.ngfactory#SignupPageModuleNgFactory\", name: \"SignupPage\", segment: \"signup\", priority: \"low\", defaultHistory: [] }] }, []), i0.ɵmpd(512, i0.Compiler, i0.Compiler, []), i0.ɵmpd(512, i54.NgModuleLoader, i54.NgModuleLoader, [i0.Compiler]), i0.ɵmpd(1024, i35.ModuleLoader, i35.provideModuleLoader, [i54.NgModuleLoader, i0.Injector]), i0.ɵmpd(1024, i0.APP_INITIALIZER, function (p0_0, p1_0, p2_0, p2_1, p3_0, p3_1, p3_2, p3_3, p3_4, p4_0, p4_1, p4_2, p4_3) { return [i14.ɵh(p0_0), i55.registerModeConfigs(p1_0), i25.setupProvideEvents(p2_0, p2_1), i39.setupTapClick(p3_0, p3_1, p3_2, p3_3, p3_4), i35.setupPreloading(p4_0, p4_1, p4_2, p4_3)]; }, [[2, i0.NgProbeToken], i20.Config, i28.Platform, i30.DomController, i20.Config, i28.Platform, i30.DomController, i19.App, i40.GestureController, i20.Config, i33.DeepLinkConfigToken, i35.ModuleLoader, i0.NgZone]), i0.ɵmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.ɵmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ɵConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.ɵmpd(512, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.ɵmpd(512, i14.BrowserModule, i14.BrowserModule, [[3, i14.BrowserModule]]), i0.ɵmpd(512, i16.HttpClientXsrfModule, i16.HttpClientXsrfModule, []), i0.ɵmpd(512, i16.HttpClientModule, i16.HttpClientModule, []), i0.ɵmpd(512, i23.ɵba, i23.ɵba, []), i0.ɵmpd(512, i23.FormsModule, i23.FormsModule, []), i0.ɵmpd(512, i23.ReactiveFormsModule, i23.ReactiveFormsModule, []), i0.ɵmpd(512, i32.IonicModule, i32.IonicModule, []), i0.ɵmpd(512, i1.AppModule, i1.AppModule, []), i0.ɵmpd(256, i16.ɵf, \"XSRF-TOKEN\", []), i0.ɵmpd(256, i16.ɵg, \"X-XSRF-TOKEN\", []), i0.ɵmpd(256, i2.AppRootToken, i56.MyApp, []), i0.ɵmpd(256, i13.APP_BASE_HREF, \"/\", [])]); });\r\nexport { AppModuleNgFactory as AppModuleNgFactory };\r\n//# sourceMappingURL=app.module.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ngfactory.js.pre-build-optimizer.js","// Local de armazenamento dos nomes das chaves do storage -- Acessa o usuario logado\r\nexport const STORAGE_KEYS = {\r\n    localUser: \"localUser\",\r\n    cart: \"sistemaDeVendas\"\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/storage_keys.config.ts","import { Injectable } from \"@angular/core\";\r\nimport { STORAGE_KEYS } from \"../config/storage_keys.config\";\r\nimport { Cart } from \"../models/cart\";\r\nimport { LocalUser } from \"../models/local_user\";\r\n\r\n\r\n// Serviço que salva e obtem o usuario logado\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n    /**\r\n     * Método que obtem o usuario logado\r\n     */\r\n    getLocalUser(): LocalUser {\r\n        let usr = localStorage.getItem(STORAGE_KEYS.localUser);\r\n        if (usr == null) {\r\n            return null;\r\n        } else {\r\n            return JSON.parse(usr); // O localstorage armazena string, por esse motivo o parse\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Recebe o localUser e armazena no storage\r\n     * @param obj \r\n     */\r\n    setLocalUser(obj: LocalUser) {\r\n        if(obj == null){\r\n            localStorage.removeItem(STORAGE_KEYS.localUser);\r\n        }else{\r\n            /**Armazenando no localstorage que é convertido para string pois e o formato que ele aceita */\r\n            localStorage.setItem(STORAGE_KEYS.localUser, JSON.stringify(obj));\r\n        }\r\n\r\n    }\r\n\r\n    getCart() : Cart {\r\n        let str = localStorage.getItem(STORAGE_KEYS.cart);\r\n        if (str != null) {\r\n            return JSON.parse(str);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    setCart(obj : Cart) {\r\n        if (obj != null) {\r\n            localStorage.setItem(STORAGE_KEYS.cart, JSON.stringify(obj));\r\n        } \r\n        else {\r\n            localStorage.removeItem(STORAGE_KEYS.cart);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/storage.service.ts","// ARQUIVO DE CONFIGURAÇÕES DA API COMO OBJETOS JSON\r\n\r\nexport const API_CONFIG = {\r\n    baseUrl: \"https://spring-ionic-mc-backend.herokuapp.com\", // URL base do SpringBoot\r\n    bucketBaseUrl: \"https://spring-ionic-mc.s3-sa-east-1.amazonaws.com\" // URL Amazon imagens\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/api.config.ts","\r\n/* Serviço de Autorização -- Esse serviço precisa ser chamado na home.ts */\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { JwtHelper } from \"angular2-jwt\";\r\nimport { API_CONFIG } from \"../config/api.config\";\r\nimport { CredenciaisDTO } from \"../models/credencias.dto\";\r\nimport { LocalUser } from \"../models/local_user\";\r\nimport { CartService } from \"./domain/cart.service\";\r\nimport { StorageService } from \"./storage.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    // Instalado atraves do npm install --save angular2-jwt\r\n    jwtHelper: JwtHelper = new JwtHelper();\r\n\r\n    // O HttpClient faz a comunicação com o ENDPOINT login\r\n    constructor(\r\n        public http: HttpClient,\r\n        public storage: StorageService,\r\n        public cartService: CartService) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Método que recebe as credencias do usuario para autenticação.\r\n     * \r\n     * o método recebe 3 argumentos: a URL, as credencias do usuario e um\r\n     * Objeto que pega o header da resposta observe: 'response' e o responseType: 'text' que é do tipo text \r\n     * e não um JSON pq o ENDPOINT de login retorna uma resposta de corpo vazio senão o framework tenta\r\n     * fazer um parse e ocorre um erro ( Evita o erro de parse do JSON de um corpo vazio )\r\n     * @param creds \r\n     */\r\n    authenticate(creds: CredenciaisDTO) {\r\n        return this.http.post(`${API_CONFIG.baseUrl}/login`,\r\n            creds,\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Metodo de sucesso ao realizar o login\r\n     * authorizationValue -> Recebe o token\r\n     */\r\n    successfulLogin(authorizationValue: string) {\r\n        // Retira a palavra Bearer com espaço e pega somente o token\r\n        let tok = authorizationValue.substring(7);\r\n        let user: LocalUser = {\r\n            token: tok,\r\n            email: this.jwtHelper.decodeToken(tok).sub // pegando o email do token\r\n        };\r\n        this.storage.setLocalUser(user);\r\n        this.cartService.createOrClearCart(); // Limpa o carrinho quando um cliente faz o login\r\n    }\r\n\r\n    /**\r\n     * Metodo de logout\r\n     */\r\n    logout() {\r\n        this.storage.setLocalUser(null); // Remove do localstorage o usuario\r\n    }\r\n\r\n    /**\r\n     * Metodo que atualiza o token quando esta proximo de expirar.\r\n     * Quando o usuario utilizar o app nao vai precisar logar caso o token ainda esteja valido.\r\n     * \r\n     * OBS: O token e incluido automaticamente na requisição.\r\n     * \r\n     * responseType: 'text' -> O response type e do tipo text pq a resposta vem em um corpo vazio e para o framework\r\n     * não dar erro de parse achando que e JSON.\r\n     */\r\n    refreshToken() {\r\n        return this.http.post(`${API_CONFIG.baseUrl}/auth/refresh_token`,\r\n            {}, // Os dados que serão enviados nesse requisição e um objeto vazio(Não tem nada para ser enviado)\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth.service.ts"]}