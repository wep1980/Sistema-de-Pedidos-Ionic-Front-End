{"version":3,"sources":["../../src/pages/order-confirmation/order-confirmation.module.ts","../../src/pages/order-confirmation/order-confirmation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACa;AAU7D;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QARvC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kFAAqB;aACtB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,kFAAqB,CAAC;aAChD;SACF,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZE;AACe;AAKc;AACN;AAOjE;IAOE,+BACS,OAAsB,EACtB,SAAoB,EACpB,cAA8B,EAC9B,WAAwB;QAHxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAE/B,+FAA+F;QAC/F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,8CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,+BAA+B;QAElF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,kDAAkD;aACpG,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,OAAO,GAAG,QAAsB,CAAC;YACtC,6KAA6K;YAC7K,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QAC7F,CAAC,EACD,eAAK;YACH,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,8DAA8D;QAClG,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACK,4CAAY,GAApB,UAAqB,EAAU,EAAE,IAAmB;QAClD,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,qFAAqF;QACrI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,iCAAiC;IACjC,qCAAK,GAAL;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IA5CU,qBAAqB;QAJjC,gEAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;WACG;SACvC,CAAC;6EAS+B;YACX,wFAAS;YACJ,oFAAc;YACjB,WAAW;OAXtB,qBAAqB,CA6CjC;IAAD,CAAC;AAAA;SA7CY,qBAAqB,gB","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { OrderConfirmationPage } from './order-confirmation';\n\n@NgModule({\n  declarations: [\n    OrderConfirmationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(OrderConfirmationPage),\n  ],\n})\nexport class OrderConfirmationPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-confirmation/order-confirmation.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { PedidoDTO } from '../../models/pedido.dto';\nimport { CartItem } from '../../models/cart-item';\nimport { EnderecoDTO } from '../../models/endereco.dto';\nimport { ClienteDTO } from '../../models/cliente.dto';\nimport { ClienteService } from '../../services/domain/cliente.service';\nimport { CartService } from '../../services/domain/cart.service';\n\n@IonicPage()\n@Component({\n  selector: 'page-order-confirmation',\n  templateUrl: 'order-confirmation.html',\n})\nexport class OrderConfirmationPage {\n\n  pedido: PedidoDTO;\n  cartItems: CartItem[]; // Para mostrar os itens do carrinho\n  cliente: ClienteDTO; // Para mostrar o cliente logado\n  endereco: EnderecoDTO; // Para mostrar o endereço\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public clienteService: ClienteService,\n    public cartService: CartService) {\n\n    // Carregando o pedido no construtor - Passa o pedido como parametro de uma pagina para outra  \n    this.pedido = this.navParams.get('pedido');\n  }\n\n  ionViewDidLoad() {\n    this.cartItems = this.cartService.getCart().items; // Carrega os itens do carrinho\n\n    this.clienteService.findById(this.pedido.cliente.id) // Busca o id do cliente que esta no objeto pedido\n      .subscribe(response => { // se inscreve para receber a resposta. Na resposta vem um cliente completo com todos os dados, é necessario fazer um casting para ClienteDTO que recebe apenas id, nome e email\n        this.cliente = response as ClienteDTO;\n        // No objeto de pedido tem somente o id, para pegar os dados e chamada a funcao que busca os endereços atraves do id do endereço de entrega na lista dos endereços do cliente\n        this.endereco = this.findEndereco(this.pedido.enderecoDeEntrega.id, response['enderecos']);\n      },\n      error => {\n        this.navCtrl.setRoot('HomePage'); // se acontecer algum erro e redirecionado para pagina inicial\n      });\n  }\n\n  /**\n   * Função que procura os endereços\n   * @param id \n   * @param list \n   */\n  private findEndereco(id: string, list: EnderecoDTO[]) : EnderecoDTO {\n    let position = list.findIndex(x => x.id == id); // Encontra a posição do objeto x tal que x.id seja igual ao id passado por parametro\n    return list[position];\n  }\n\n  // Mostra o valor total do pedido\n  total() : number {\n    return this.cartService.total();\n  } \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-confirmation/order-confirmation.ts"],"sourceRoot":""}